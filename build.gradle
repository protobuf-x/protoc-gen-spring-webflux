buildscript {
    repositories {
        gradlePluginPortal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.johnrengelman:shadow:8.1.1"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.7.18"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
        classpath "com.vanniktech:gradle-maven-publish-plugin:0.34.0"
    }
}

allprojects {
    group = 'io.github.protobuf-x'
    version = '0.4.0'
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

project('plugin') {
    apply plugin: "com.vanniktech.maven.publish"
    apply plugin: 'application'
    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = JavaVersion.VERSION_11

    dependencies {
        implementation 'com.google.protobuf:protobuf-java:3.6.1'
        implementation 'com.google.protobuf:protobuf-java-util:3.6.1'
        implementation 'com.google.api.grpc:proto-google-common-protos:1.17.0'
        implementation 'com.github.jknack:handlebars:4.1.2'
        implementation 'org.apache.commons:commons-lang3:3.9'
        implementation 'com.google.googlejavaformat:google-java-format:1.7'
        implementation 'org.apache.logging.log4j:log4j-api:2.12.1'
        implementation 'org.apache.logging.log4j:log4j-core:2.12.1'
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.12.1'

        testImplementation 'org.junit.platform:junit-platform-launcher:1.4.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
        testImplementation 'org.junit.vintage:junit-vintage-engine:5.4.2'
    }

    // Define the main class for the application
    mainClassName = 'io.github.protobufx.protoc.gen.spring.Main'

    jar {
        enabled = false
        manifest {
            attributes "Main-Class" : "io.github.protobufx.protoc.gen.spring.Main"
            attributes 'Multi-Release': 'true'
        }
    }

    shadowJar {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = null
    }

    task sourceJar(type: Jar) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    task linuxExe(type: Jar) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = 'linux-x86_64'
        archiveExtension = 'exe'
        dependsOn(shadowJar)
        doLast {
            File file = linuxExe.archivePath
            file.delete()
            file.createNewFile()
            file.executable = true
            file << "#!/bin/bash\nexec java -jar \$0\n"
            file << shadowJar.archivePath.bytes
        }
    }

    task osxX86Exe(type: Jar) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = 'osx-x86_64'
        archiveExtension = 'exe'
        dependsOn(shadowJar)
        doLast {
            File file = osxX86Exe.archivePath
            file.delete()
            file.createNewFile()
            file.executable = true
            file << "#!/bin/bash\nexec java -jar \$0\n"
            file << shadowJar.archivePath.bytes
        }
    }

    task osxAarchExe(type: Jar) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = 'osx-aarch_64'
        archiveExtension = 'exe'
        dependsOn(shadowJar)
        doLast {
            File file = osxAarchExe.archivePath
            file.delete()
            file.createNewFile()
            file.executable = true
            file << "#!/bin/bash\nexec java -jar \$0\n"
            file << shadowJar.archivePath.bytes
        }
    }

    mavenPublishing {
        publishToMavenCentral()
        signAllPublications()

        coordinates('io.github.protobuf-x', 'protoc-gen-spring-webflux', project.version)

        pom {
            name = 'protoc-gen-spring-webflux'
            description = 'gRPC to JSON handler generator protoc plugin'
            inceptionYear = "2025"
            url = 'https://github.com/protobuf-x/protoc-gen-spring-webflux'
            licenses {
                license {
                    name = "MIT"
                    url = 'https://opensource.org/licenses/MIT'
                    distribution = 'https://opensource.org/licenses/MIT'
                }
            }
            developers {
                developer {
                    id = "disc99"
                    name = "Daisuke Kanehira"
                    url = "https://github.com/disc99/"
                }
            }
            scm {
                url = "https://github.com/protobuf-x/protoc-gen-spring-webflux/"
                connection = "scm:git:git://github.com/protobuf-x/protoc-gen-spring-webflux.git"
                developerConnection = "scm:git:ssh://git@github.com/protobuf-x/protoc-gen-spring-webflux.git"
            }
        }
    }

    afterEvaluate {
        publishing {
            publications {
                maven(MavenPublication) {
                    artifact linuxExe
                    artifact osxX86Exe
                    artifact osxAarchExe
                }
            }
        }
    }
}

project('example') {
    apply plugin: 'java'
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'com.google.protobuf'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-json'
        implementation 'io.github.lognet:grpc-spring-boot-starter:3.1.0'
        implementation "io.grpc:grpc-netty:1.23.0"
        implementation "io.grpc:grpc-protobuf:1.23.0"
        implementation "io.grpc:grpc-stub:1.23.0"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit'
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }


    protobuf {
        def versionSuffix = (System.properties.containsKey("os.name")
                && System.properties.get("os.name") == "Mac OS X"
                && System.properties.containsKey("os.arch")
                && System.properties.get("os.arch") == "aarch64") ? ":osx-x86_64" : ""
        protoc {
            artifact = "com.google.protobuf:protoc:3.8.0${versionSuffix}"
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:1.21.0${versionSuffix}"
            }
            webflux {
                artifact = 'io.github.protobuf-x:protoc-gen-spring-webflux:local-SNAPSHOT'
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
                webflux {}
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
                srcDirs 'build/generated/source/proto/main/webflux'
            }
        }
    }

    test {
        useJUnitPlatform()
    }
}

